{"version":3,"sources":["logo.svg","posts/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["PostsComponent","props","textAreaRef","React","createRef","useState","newPosts","setNewPosts","className","onSubmit","event","preventDefault","newValue","current","value","tempNewPosts","unshift","content","likes","id","ref","required","type","PostsList","postsInit","setPostsInit","posts","setPosts","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","send","loadPosts","alert","map","post","index","Post","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appElement","document","getElementById","ReactDOM","render","StrictMode","postsEl"],"mappings":"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","file":"static/js/main.d601d4ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react'\n\nimport {loadPosts} from '../lookup'\n\nexport function PostsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newPosts, setNewPosts] = useState([])\n  const handleSubmit = (event) => { \n    event.preventDefault()\n    const newValue = textAreaRef.current.value\n    let tempNewPosts = [...newPosts]\n    tempNewPosts.unshift({\n      content: newValue,\n      likes: 0,\n      id: 2121\n    })\n    setNewPosts(tempNewPosts)\n    textAreaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <div className='col-12 mb-3'>\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className='form-control'>\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Post</button>\n      </form>\n    </div>\n    <PostsList newPosts={newPosts}/> \n  </div>\n}\n\nexport function PostsList(props) {\n    const [postsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    useEffect(()=>{\n      let final = [...props.newPosts].concat(postsInit)\n      if (final.length !== posts.length) {\n        setPosts(final)\n      }\n    }, [props.newPosts, posts, postsInit])\n\n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status === 200){\n          setPostsInit(response)\n        } else {\n          alert(\"Ошибка же\")\n        }\n      }\n      loadPosts(myCallback)\n      }, [postsInit])\n      return posts.map((post, index)=>{\n        return <Post post={post} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n      })\n  }\n\nexport function ActionBtn(props) {\n    const {post, action} = props\n    const [likes, setLikes] = useState(post.likes ? post.likes : 0)\n    const [userLike, setUserLike] = useState(post.userLike === true ? true: false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display: 'Action'\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        if (action.type === 'like') {\n            if (userLike === true) {\n                setLikes(likes - 1)\n                setUserLike(false)\n            } else {\n                setLikes(likes + 1)\n                setUserLike(true)\n            }\n        }\n    }\n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n  \nexport function Post(props) {\n    const {post} = props\n    const className = props.className ? props.className : 'col-10 mx-auto, col-md-6'\n    return <div className={className}>\n      <p>{post.content}</p>\n      <div className='btn btn-group'>\n        <ActionBtn post={post} action={{type: \"like\", display:\"Likes\"}}/>\n        <ActionBtn post={post} action={{type: \"unlike\", display:\"Unlikes\"}}/>\n        <ActionBtn post={post} action={{type: \"repost\", display:\"Repost\"}}/>\n      </div>\n    </div>\n}","\n\nexport function loadPosts(callback) {\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = 'http://localhost:8000/api/posts'\n    const responseType = 'json'\n  \n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function() {\n      callback(xhr.response, xhr.status )\n    }\n    xhr.onerror = function (e) {\n      console.log(e)\n      callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send()\n  }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PostsComponent} from './posts'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <PostsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {PostsComponent} from './posts';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst appElement = document.getElementById('root')\nif (appElement) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appElement\n  );\n}\nconst postsEl = document.getElementById(\"thinking\")\nif (postsEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <PostsComponent />\n    </React.StrictMode>,\n    postsEl\n  );\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}